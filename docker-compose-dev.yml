version: '3.8'
volumes:
  frontend-node-modules:

services:
  nginx:
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"

  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      #args:
      #  - UID=${UID:-1111}
      #  - GID=${GID:-1111}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
      #- /app/node_modules

  frontend-test:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
      #- /app/node_modules
    command: ["npm", "test"]

  mongo:
    image: 'mongo:latest'
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-devuser}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-somepass}
      - MONGO_INITDB_DATABASE=${MONGO_DBNAME:-TodoDB}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    depends_on:
      mongo:
        condition: service_healthy

    restart: unless-stopped
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - /home/node/api/node_modules
      - ./api:/home/node/api
    environment:
      - MONGODB_URL=mongodb://mongo/
      - MONGODB_USER=${MONGO_USERNAME:-devuser}
      - MONGODB_PASS=${MONGO_PASSWORD:-somepass}
      - MONGODB_DBNAME=${MONGO_DBNAME:-TodoDB}
    ports:
      - "5000:5000"

  #devenv:
  #  restart: unless-stopped
  #  image: ubuntu:latest
