version: '3.8'
volumes:
  mongo_data_dev:

services:
  nginx:
    depends_on:
      - api
      - frontend
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "8080:80"

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules

  frontend-test:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    command: ["npm", "test"]

  mongo:
    image: 'mongo:latest'
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-devuser}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-somepass}
      - MONGO_INITDB_DATABASE=${MONGO_DBNAME:-TodoDB}
    healthcheck:
      #test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      test: 'sleep 3'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - mongo_data_dev:/data/db

  api:
    depends_on:
      mongo:
        condition: service_healthy

    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - /api/node_modules
      - /api/dist
      - ./api:/api
    environment:
      - MONGODB_URL=mongodb://mongo/
      - MONGODB_USER=${MONGO_USERNAME:-devuser}
      - MONGODB_PASS=${MONGO_PASSWORD:-somepass}
      - MONGODB_DBNAME=${MONGO_DBNAME:-TodoDB}
    ports:
      - "5001:5000"

  mongo-test:
    image: 'mongo:latest'
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=testuser
      - MONGO_INITDB_ROOT_PASSWORD=testpass
      - MONGO_INITDB_DATABASE=TestDB
    healthcheck:
      #test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      test: 'sleep 3'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  api-test:
    depends_on:
      mongo-test:
        condition: service_healthy
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      - /api/node_modules
      - /api/dist
      - ./api:/api
    command: ["npm", "test"]
